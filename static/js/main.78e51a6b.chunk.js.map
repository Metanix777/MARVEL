{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/mjolnir.png","services/MarvelService.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","src","img","alt","RandomChar","props","state","loading","error","onCharLoaded","setState","onCharLoading","onError","marvelServices","updateChar","Math","floor","random","then","catch","updateDescription","desc","length","slice","onButtonClick","this","errorMessage","spinner","content","onClick","mjolnir","Component","View","styleImg","objectFit","CharList","charList","newItemLoading","charEnded","marvelService","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","refList","setRefItem","ref","push","onFocusItem","forEach","item","classList","remove","add","focus","arr","i","imgStyle","onCharSelected","renderItems","disabled","Skeleton","CharInfo","charId","prevProps","skeleton","ErrorBoumdary","children","App","selectedChar","ErrorBoundary","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78e51a6b.chunk.js","sourcesContent":["import './appHeader.scss';\r\n\r\nconst AppHeader = () => {\r\n    return (\r\n        <header className=\"app__header\">\r\n            <h1 className=\"app__title\">\r\n                <a href=\"#\">\r\n                    <span>Marvel</span> information portal\r\n                </a>\r\n            </h1>\r\n            <nav className=\"app__menu\">\r\n                <ul>\r\n                    <li><a href=\"#\">Characters</a></li>\r\n                    /\r\n                    <li><a href=\"#\">Comics</a></li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","class MarvelService {\r\n    _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n    _apiKey = \"apikey=d301a62cf71e30f5e6ffa9e4f12f0bb0\";\r\n    _baseOffset = 215;\r\n\r\n    getResource = async (url) => {\r\n        let res = await fetch(url);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n\r\n        return await res.json();\r\n    };\r\n\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getResource(\r\n            `${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`\r\n        );\r\n        return res.data.results.map(this._transformCharacter);\r\n    };\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(\r\n            `${this._apiBase}characters/${id}?${this._apiKey}`\r\n        );\r\n        return this._transformCharacter(res.data.results[0]);\r\n    };\r\n\r\n    _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description,\r\n            thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items,\r\n        };\r\n    };\r\n}\r\n\r\nexport default MarvelService;\r\n","const Spinner = () => {\r\n    return (\r\n        <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            style={{ margin: \"0 auto\", background: \"none\", display: \"block\" }}\r\n            width=\"200px\"\r\n            height=\"200px\"\r\n            viewBox=\"0 0 100 100\"\r\n            preserveAspectRatio=\"xMidYMid\"\r\n        >\r\n            <g transform=\"translate(80,50)\">\r\n                <g transform=\"rotate(0)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n                        <animateTransform\r\n                            attributeName=\"transform\"\r\n                            type=\"scale\"\r\n                            begin=\"-0.875s\"\r\n                            values=\"1.5 1.5;1 1\"\r\n                            keyTimes=\"0;1\"\r\n                            dur=\"1s\"\r\n                            repeatCount=\"indefinite\"\r\n                        ></animateTransform>\r\n                        <animate\r\n                            attributeName=\"fillOpacity\"\r\n                            keyTimes=\"0;1\"\r\n                            dur=\"1s\"\r\n                            repeatCount=\"indefinite\"\r\n                            values=\"1;0\"\r\n                            begin=\"-0.875s\"\r\n                        ></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n                <g transform=\"rotate(45)\">\r\n                    <circle\r\n                        cx=\"0\"\r\n                        cy=\"0\"\r\n                        r=\"7\"\r\n                        fill=\"#1c4595\"\r\n                        fillOpacity=\"0.875\"\r\n                    >\r\n                        <animateTransform\r\n                            attributeName=\"transform\"\r\n                            type=\"scale\"\r\n                            begin=\"-0.75s\"\r\n                            values=\"1.5 1.5;1 1\"\r\n                            keyTimes=\"0;1\"\r\n                            dur=\"1s\"\r\n                            repeatCount=\"indefinite\"\r\n                        ></animateTransform>\r\n                        <animate\r\n                            attributeName=\"fillOpacity\"\r\n                            keyTimes=\"0;1\"\r\n                            dur=\"1s\"\r\n                            repeatCount=\"indefinite\"\r\n                            values=\"1;0\"\r\n                            begin=\"-0.75s\"\r\n                        ></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(50,80)\">\r\n                <g transform=\"rotate(90)\">\r\n                    <circle\r\n                        cx=\"0\"\r\n                        cy=\"0\"\r\n                        r=\"7\"\r\n                        fill=\"#1c4595\"\r\n                        fillOpacity=\"0.75\"\r\n                    >\r\n                        <animateTransform\r\n                            attributeName=\"transform\"\r\n                            type=\"scale\"\r\n                            begin=\"-0.625s\"\r\n                            values=\"1.5 1.5;1 1\"\r\n                            keyTimes=\"0;1\"\r\n                            dur=\"1s\"\r\n                            repeatCount=\"indefinite\"\r\n                        ></animateTransform>\r\n                        <animate\r\n                            attributeName=\"fillOpacity\"\r\n                            keyTimes=\"0;1\"\r\n                            dur=\"1s\"\r\n                            repeatCount=\"indefinite\"\r\n                            values=\"1;0\"\r\n                            begin=\"-0.625s\"\r\n                        ></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n                <g transform=\"rotate(135)\">\r\n                    <circle\r\n                        cx=\"0\"\r\n                        cy=\"0\"\r\n                        r=\"7\"\r\n                        fill=\"#1c4595\"\r\n                        fillOpacity=\"0.625\"\r\n                    >\r\n                        <animateTransform\r\n                            attributeName=\"transform\"\r\n                            type=\"scale\"\r\n                            begin=\"-0.5s\"\r\n                            values=\"1.5 1.5;1 1\"\r\n                            keyTimes=\"0;1\"\r\n                            dur=\"1s\"\r\n                            repeatCount=\"indefinite\"\r\n                        ></animateTransform>\r\n                        <animate\r\n                            attributeName=\"fillOpacity\"\r\n                            keyTimes=\"0;1\"\r\n                            dur=\"1s\"\r\n                            repeatCount=\"indefinite\"\r\n                            values=\"1;0\"\r\n                            begin=\"-0.5s\"\r\n                        ></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(20,50.00000000000001)\">\r\n                <g transform=\"rotate(180)\">\r\n                    <circle\r\n                        cx=\"0\"\r\n                        cy=\"0\"\r\n                        r=\"7\"\r\n                        fill=\"#1c4595\"\r\n                        fillOpacity=\"0.5\"\r\n                    >\r\n                        <animateTransform\r\n                            attributeName=\"transform\"\r\n                            type=\"scale\"\r\n                            begin=\"-0.375s\"\r\n                            values=\"1.5 1.5;1 1\"\r\n                            keyTimes=\"0;1\"\r\n                            dur=\"1s\"\r\n                            repeatCount=\"indefinite\"\r\n                        ></animateTransform>\r\n                        <animate\r\n                            attributeName=\"fillOpacity\"\r\n                            keyTimes=\"0;1\"\r\n                            dur=\"1s\"\r\n                            repeatCount=\"indefinite\"\r\n                            values=\"1;0\"\r\n                            begin=\"-0.375s\"\r\n                        ></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n                <g transform=\"rotate(225)\">\r\n                    <circle\r\n                        cx=\"0\"\r\n                        cy=\"0\"\r\n                        r=\"7\"\r\n                        fill=\"#1c4595\"\r\n                        fillOpacity=\"0.375\"\r\n                    >\r\n                        <animateTransform\r\n                            attributeName=\"transform\"\r\n                            type=\"scale\"\r\n                            begin=\"-0.25s\"\r\n                            values=\"1.5 1.5;1 1\"\r\n                            keyTimes=\"0;1\"\r\n                            dur=\"1s\"\r\n                            repeatCount=\"indefinite\"\r\n                        ></animateTransform>\r\n                        <animate\r\n                            attributeName=\"fillOpacity\"\r\n                            keyTimes=\"0;1\"\r\n                            dur=\"1s\"\r\n                            repeatCount=\"indefinite\"\r\n                            values=\"1;0\"\r\n                            begin=\"-0.25s\"\r\n                        ></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(49.99999999999999,20)\">\r\n                <g transform=\"rotate(270)\">\r\n                    <circle\r\n                        cx=\"0\"\r\n                        cy=\"0\"\r\n                        r=\"7\"\r\n                        fill=\"#1c4595\"\r\n                        fillOpacity=\"0.25\"\r\n                    >\r\n                        <animateTransform\r\n                            attributeName=\"transform\"\r\n                            type=\"scale\"\r\n                            begin=\"-0.125s\"\r\n                            values=\"1.5 1.5;1 1\"\r\n                            keyTimes=\"0;1\"\r\n                            dur=\"1s\"\r\n                            repeatCount=\"indefinite\"\r\n                        ></animateTransform>\r\n                        <animate\r\n                            attributeName=\"fillOpacity\"\r\n                            keyTimes=\"0;1\"\r\n                            dur=\"1s\"\r\n                            repeatCount=\"indefinite\"\r\n                            values=\"1;0\"\r\n                            begin=\"-0.125s\"\r\n                        ></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n                <g transform=\"rotate(315)\">\r\n                    <circle\r\n                        cx=\"0\"\r\n                        cy=\"0\"\r\n                        r=\"7\"\r\n                        fill=\"#1c4595\"\r\n                        fillOpacity=\"0.125\"\r\n                    >\r\n                        <animateTransform\r\n                            attributeName=\"transform\"\r\n                            type=\"scale\"\r\n                            begin=\"0s\"\r\n                            values=\"1.5 1.5;1 1\"\r\n                            keyTimes=\"0;1\"\r\n                            dur=\"1s\"\r\n                            repeatCount=\"indefinite\"\r\n                        ></animateTransform>\r\n                        <animate\r\n                            attributeName=\"fillOpacity\"\r\n                            keyTimes=\"0;1\"\r\n                            dur=\"1s\"\r\n                            repeatCount=\"indefinite\"\r\n                            values=\"1;0\"\r\n                            begin=\"0s\"\r\n                        ></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n        </svg>\r\n    );\r\n};\r\n\r\nexport default Spinner;\r\n","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\";\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img\r\n            src={img}\r\n            alt=\"error\"\r\n            style={{\r\n                height: \"200px\",\r\n                margin: \"0 auto\",\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { Component } from \"react\";\r\nimport \"./randomChar.scss\";\r\nimport mjolnir from \"../../resources/img/mjolnir.png\";\r\nimport MarvelService from \"../../services/MarvelService\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"./../errorMessage/ErrorMessage\";\r\n\r\nclass RandomChar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    state = {\r\n        char: {},\r\n        loading: true,\r\n        error: false,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.updateChar();\r\n    }\r\n\r\n    componentWillUnmount() {}\r\n\r\n    onCharLoaded = (char) => {\r\n        this.setState({ char, loading: false });\r\n    };\r\n\r\n    onCharLoading = () => {\r\n        this.setState({ loading: true });\r\n    };\r\n\r\n    onError = () => {\r\n        this.setState({ loading: false, error: true });\r\n    };\r\n\r\n    marvelServices = new MarvelService();\r\n\r\n    updateChar = () => {\r\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n        this.onCharLoading();\r\n        this.marvelServices\r\n            .getCharacter(id)\r\n            .then(this.onCharLoaded)\r\n            .catch(this.onError);\r\n    };\r\n\r\n    updateDescription = (desc) => {\r\n        if (desc.length > 100) {\r\n            return `${desc.slice(0, 100)}...`;\r\n        }\r\n\r\n        return \"No description for this character\";\r\n    };\r\n\r\n    onButtonClick = () => {\r\n        this.updateChar();\r\n    };\r\n\r\n    render() {\r\n        const { char, loading, error } = this.state;\r\n        const errorMessage = error ? <ErrorMessage /> : null;\r\n        const spinner = loading ? <Spinner /> : null;\r\n        const content = !(loading || error) ? <View char={char} /> : null;\r\n\r\n        return (\r\n            <div className=\"randomchar\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n                <div className=\"randomchar__static\">\r\n                    <p className=\"randomchar__title\">\r\n                        Random character for today!\r\n                        <br />\r\n                        Do you want to get to know him better?\r\n                    </p>\r\n                    <p className=\"randomchar__title\">Or choose another one</p>\r\n                    <button\r\n                        className=\"button button__main\"\r\n                        onClick={this.onButtonClick}\r\n                    >\r\n                        <div className=\"inner\">try it</div>\r\n                    </button>\r\n                    <img\r\n                        src={mjolnir}\r\n                        alt=\"mjolnir\"\r\n                        className=\"randomchar__decoration\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst View = ({ char }) => {\r\n    const { name, description, thumbnail, homepage, wiki } = char;\r\n\r\n    const styleImg =\r\n        char.thumbnail ===\r\n        \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\r\n            ? { objectFit: \"contain\" }\r\n            : null;\r\n\r\n    return (\r\n        <div className=\"randomchar__block\">\r\n            <img\r\n                src={thumbnail}\r\n                alt=\"Random character\"\r\n                className=\"randomchar__img\"\r\n                style={styleImg}\r\n            />\r\n            <div className=\"randomchar__info\">\r\n                <p className=\"randomchar__name\">\r\n                    {name.length > 20 ? name.slice(0, 20) + \"...\" : name}\r\n                </p>\r\n                <p className=\"randomchar__descr\">\r\n                    {description\r\n                        ? `${description.slice(0, 170)}...`\r\n                        : \"No description for this character\"}\r\n                </p>\r\n                <div className=\"randomchar__btns\">\r\n                    <a href={homepage} className=\"button button__main\">\r\n                        <div className=\"inner\">homepage</div>\r\n                    </a>\r\n                    <a href={wiki} className=\"button button__secondary\">\r\n                        <div className=\"inner\">Wiki</div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RandomChar;\r\n","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport MarvelService from \"../../services/MarvelService\";\r\nimport \"./charList.scss\";\r\n\r\nclass CharList extends Component {\r\n  state = {\r\n    charList: [],\r\n    loading: true,\r\n    error: false,\r\n    newItemLoading: false,\r\n    offset: 210,\r\n    charEnded: false,\r\n  };\r\n\r\n  marvelService = new MarvelService();\r\n\r\n  componentDidMount() {\r\n    this.onRequest();\r\n  }\r\n\r\n  onRequest = (offset) => {\r\n    this.onCharListLoading();\r\n    this.marvelService\r\n      .getAllCharacters(offset)\r\n      .then(this.onCharListLoaded)\r\n      .catch(this.onError);\r\n  };\r\n\r\n  onCharListLoading = () => {\r\n    this.setState({\r\n      newItemLoading: true,\r\n    });\r\n  };\r\n\r\n  onCharListLoaded = (newCharList) => {\r\n    let ended = false;\r\n    if (newCharList.length < 9) {\r\n      ended = true;\r\n    }\r\n\r\n    this.setState(({ offset, charList }) => ({\r\n      charList: [...charList, ...newCharList],\r\n      loading: false,\r\n      newItemLoading: false,\r\n      offset: offset + 9,\r\n      charEnded: ended,\r\n    }));\r\n  };\r\n\r\n  onError = () => {\r\n    this.setState({\r\n      error: true,\r\n      loading: false,\r\n    });\r\n  };\r\n\r\n  refList = [];\r\n\r\n  setRefItem = (ref) => {\r\n    this.refList.push(ref);\r\n  };\r\n\r\n  onFocusItem = (id) => {\r\n    this.refList.forEach((item) =>\r\n      item.classList.remove(\"char__item_selected\")\r\n    );\r\n    this.refList[id].classList.add(\"char__item_selected\");\r\n    this.refList[id].focus();\r\n  };\r\n\r\n  renderItems(arr) {\r\n    const items = arr.map((item, i) => {\r\n      let imgStyle = { objectFit: \"cover\" };\r\n      if (\r\n        item.thumbnail ===\r\n        \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\r\n      ) {\r\n        imgStyle = { objectFit: \"unset\" };\r\n      }\r\n\r\n      return (\r\n        <li\r\n          ref={this.setRefItem}\r\n          className=\"char__item\"\r\n          key={item.id}\r\n          onClick={() => {\r\n            this.props.onCharSelected(item.id);\r\n            this.onFocusItem(i);\r\n          }}\r\n        >\r\n          <img src={item.thumbnail} alt={item.name} style={imgStyle} />\r\n          <div className=\"char__name\">{item.name}</div>\r\n        </li>\r\n      );\r\n    });\r\n    return <ul className=\"char__grid\">{items}</ul>;\r\n  }\r\n\r\n  render() {\r\n    const { charList, loading, error, offset, newItemLoading, charEnded } =\r\n      this.state;\r\n\r\n    const items = this.renderItems(charList);\r\n\r\n    const errorMessage = error ? <ErrorMessage /> : null;\r\n    const spinner = loading ? <Spinner /> : null;\r\n    const content = !(loading || error) ? items : null;\r\n\r\n    return (\r\n      <div className=\"char__list\">\r\n        {errorMessage}\r\n        {spinner}\r\n        {content}\r\n        <button\r\n          className=\"button button__main button__long\"\r\n          disabled={newItemLoading}\r\n          style={{ display: charEnded ? \"none\" : \"block\" }}\r\n          onClick={() => this.onRequest(offset)}\r\n        >\r\n          <div className=\"inner\">load more</div>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCharList.propTypes = {\r\n  onCharSelected: PropTypes.func,\r\n};\r\n\r\nexport default CharList;\r\n","import './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n    return (\r\n        <>\r\n            <p className=\"char__select\">Please select a character to see information</p>\r\n            <div className=\"skeleton\">\r\n                <div className=\"pulse skeleton__header\">\r\n                    <div className=\"pulse skeleton__circle\"></div>\r\n                    <div className=\"pulse skeleton__mini\"></div>\r\n                </div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skeleton;","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./charInfo.scss\";\r\nimport MarvelService from \"../../services/MarvelService\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport Skeleton from \"./../skeleton/Skeleton\";\r\n\r\nclass CharInfo extends Component {\r\n    state = {\r\n        char: null,\r\n        loading: false,\r\n        error: false,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.updateChar();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.charId !== prevProps.charId) {\r\n            this.updateChar();\r\n        }\r\n    }\r\n\r\n    marvelService = new MarvelService();\r\n\r\n    updateChar = () => {\r\n        const { charId } = this.props;\r\n        if (!charId) {\r\n            return;\r\n        }\r\n\r\n        this.onCharLoading();\r\n\r\n        this.marvelService\r\n            .getCharacter(charId)\r\n            .then(this.onCharLoaded)\r\n            .catch(this.onError);\r\n    };\r\n\r\n    onCharLoaded = (char) => {\r\n        this.setState({\r\n            char,\r\n            loading: false,\r\n        });\r\n    };\r\n\r\n    onCharLoading = () => {\r\n        this.setState({ loading: true });\r\n    };\r\n\r\n    onError = () => {\r\n        this.setState({\r\n            loading: false,\r\n            error: true,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { char, loading, error } = this.state;\r\n        const skeleton = char || loading || error ? null : <Skeleton />;\r\n        const errorMessage = error ? <ErrorMessage /> : null;\r\n        const spinner = loading ? <Spinner /> : null;\r\n        const content = !(loading || error || !char) ? (\r\n            <View char={char} />\r\n        ) : null;\r\n\r\n        return (\r\n            <div className=\"char__info\">\r\n                {skeleton}\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst View = ({ char }) => {\r\n    const { name, description, thumbnail, homepage, wiki, comics } = char;\r\n    const styleImg =\r\n        thumbnail ===\r\n        \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\r\n            ? { objectFit: \"contain\" }\r\n            : null;\r\n    return (\r\n        <>\r\n            <div className=\"char__basics\">\r\n                <img src={thumbnail} alt={name} style={styleImg} />\r\n                <div>\r\n                    <div className=\"char__info-name\">{name}</div>\r\n                    <div className=\"char__btns\">\r\n                        <a href={homepage} className=\"button button__main\">\r\n                            <div className=\"inner\">homepage</div>\r\n                        </a>\r\n                        <a href={wiki} className=\"button button__secondary\">\r\n                            <div className=\"inner\">Wiki</div>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"char__descr\">{description}</div>\r\n            <div className=\"char__comics\">Comics:</div>\r\n            <ul className=\"char__comics-list\">\r\n                {comics.length > 0\r\n                    ? null\r\n                    : \"There is no comics with this character\"}\r\n                {comics.map((item, i) => {\r\n                    if (i > 9) return;\r\n                    return (\r\n                        <li key={i} className=\"char__comics-item\">\r\n                            {item.name}\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </>\r\n    );\r\n};\r\n\r\nCharInfo.propTypes = {\r\n    charId: PropTypes.number,\r\n};\r\n\r\nexport default CharInfo;\r\n","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoumdary extends Component {\r\n    state = {\r\n        error: false,\r\n    };\r\n\r\n    componentDidCatch() {\r\n        this.setState({ error: true });\r\n    }\r\n\r\n    render() {\r\n        return <>{this.state.error ? <ErrorMessage /> : this.props.children}</>;\r\n    }\r\n}\r\n\r\nexport default ErrorBoumdary;\r\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\r\nimport AppHeader from \"../appHeader/AppHeader\";\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nimport decoration from \"../../resources/img/vision.png\";\r\n\r\nclass App extends Component {\r\n    state = {\r\n        selectedChar: null,\r\n    };\r\n\r\n    onCharSelected = (id) => {\r\n        this.setState({ selectedChar: id });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <AppHeader />\r\n                <main>\r\n                    <ErrorBoundary>\r\n                        <RandomChar />\r\n                    </ErrorBoundary>\r\n                    <div className=\"char__content\">\r\n                        <ErrorBoundary>\r\n                            <CharList onCharSelected={this.onCharSelected} />\r\n                        </ErrorBoundary>\r\n                        <ErrorBoundary>\r\n                            <CharInfo charId={this.state.selectedChar} />\r\n                        </ErrorBoundary>\r\n                    </div>\r\n                    <img\r\n                        className=\"bg-decoration\"\r\n                        src={decoration}\r\n                        alt=\"vision\"\r\n                    />\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/app/App\";\r\n\r\nimport \"./style/style.scss\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}